plugins {
    id 'java'

    id 'jacoco'

    id 'application'
}

group 'mapc.controles'
version '0.5'

defaultTasks 'clean', 'test', 'run', 'jacocoTestReport'

repositories {
    mavenCentral()
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

dependencies {
    implementation("org.slf4j:slf4j-api:2.0.0-alpha4")
    implementation("ch.qos.logback:logback-classic:1.3.0-alpha10")
    implementation('com.beust:jcommander:1.78')
    implementation('com.google.inject:guice:5.0.0-BETA-1')
    implementation('org.apache.tika:tika-core:1.24.1')
    implementation('org.apache.tika:tika-parsers:1.24.1')
    implementation('commons-beanutils:commons-beanutils:1.9.4')
    implementation('org.apache.commons:commons-configuration2:2.7')
    implementation files("libs/generators.jar")
    implementation("com.github.jai-imageio:jai-imageio-jpeg2000:1.3.0")
    implementation('org.xerial:sqlite-jdbc:3.32.3.2')
    testImplementation("org.junit.jupiter:junit-jupiter-api:5.8.1")
    testImplementation("org.junit.jupiter:junit-jupiter-params:5.8.1")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:5.8.1")
    testRuntimeOnly("org.apache.logging.log4j:log4j-core:2.13.3")
    testRuntimeOnly("org.apache.logging.log4j:log4j-jul:2.13.3")
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
    ignoreFailures = true
    systemProperty 'java.util.logging.manager', 'org.apache.logging.log4j.jul.LogManager'
}

application {
    // Define the main class for the application.
    mainClass.set('client.App')
}

tasks.named('jar') {
    from(configurations.runtimeClasspath.findAll { it.name.endsWith('jar') }.collect { zipTree(it) }) {
        exclude "META-INF/*.SF"
        exclude "META-INF/*.DSA"
        exclude "META-INF/*.RSA"
        exclude "META-INF/*.LIST"
        exclude "META-INF/DEPENDENCIES"
        exclude "META-INF/LICENSE"
        exclude "META-INF/LICENSE.txt"
        exclude "LICENSE.txt"
        exclude "META-INF/LICENSE.md"
        exclude "META-INF/NOTICE"
        exclude "META-INF/NOTICE.md"
        exclude "META-INF/NOTICE.txt"
        exclude "NOTICE.txt"
        exclude "META-INF/LICENSE.txt"
    }
    archiveVersion = '0.5'
    manifest {
        attributes 'Implementation-Title': 'MAPC-CC2',
                'Implementation-Version': jar.archiveVersion,
                'Built-By': 'Modelisation architecturale et patrons de conception',
                'Built-Date': new Date(),
                'Built-JDK': System.getProperty('java.version'),
                'Main-Class': application.getMainClass()
    }
    duplicatesStrategy = DuplicatesStrategy.WARN
}
